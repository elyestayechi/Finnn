groups:
  - name: finn-alerts
    rules:
      # Service Health Alerts
      - alert: BackendDown
        expr: up{job="backend"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Backend service is down"
          description: "The Finn backend service has been down for more than 1 minute"

      - alert: HighCPUUsage
        expr: rate(process_cpu_seconds_total{job="backend"}[5m]) * 100 > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High CPU usage"
          description: "Backend CPU usage is above 80% for 5 minutes"

      - alert: HighMemoryUsage
        expr: process_resident_memory_bytes{job="backend"} > 1.6e9  # 1.6GB
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage"
          description: "Backend memory usage is above 1.6GB for 5 minutes"

      # Business Logic Alerts
      - alert: HighErrorRate
        expr: rate(analysis_failure_total[5m]) / rate(analysis_total[5m]) > 0.1  # 10%
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High analysis error rate"
          description: "Loan analysis error rate is above 10% for 5 minutes"

      - alert: SlowProcessing
        expr: histogram_quantile(0.95, rate(analysis_processing_time_seconds_bucket[5m])) > 120  # 2 minutes
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Slow processing detected"
          description: "95th percentile processing time is above 2 minutes for 10 minutes"

      - alert: LowSuccessRate
        expr: rate(analysis_success_total[30m]) / rate(analysis_total[30m]) < 0.8  # 80%
        for: 15m
        labels:
          severity: warning
        annotations:
          summary: "Low success rate"
          description: "Analysis success rate dropped below 80% for 15 minutes"

      # HTTP Level Alerts
      - alert: HighHTTPErrorRate
        expr: sum(rate(request_count{http_status=~"5.."}[5m])) / sum(rate(request_count[5m])) > 0.05
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High HTTP error rate"
          description: "HTTP 5xx error rate is above 5% for 5 minutes"

      - alert: HighHTTPLatency
        expr: histogram_quantile(0.95, rate(request_latency_seconds_bucket[5m])) > 10
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High HTTP latency"
          description: "95th percentile HTTP latency is above 10 seconds for 5 minutes"