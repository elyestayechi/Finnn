services:
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11435:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434"]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 120s

  backend:
    build:
      context: ./Back
      dockerfile: Dockerfile
    image: finn-loan-analysis-backend
    ports:
      - "8000:8000"
    volumes:
      - ./Back/Data:/app/Data
      - ./Back/PDF Loans:/app/PDF Loans
      - ./Back/loans_vector.db:/app/loans_vector.db
      - ./Back/loan_analysis.db:/app/loan_analysis.db
    environment:
      - PYTHONPATH=/app
      - OLLAMA_HOST=http://ollama:11434
      - PROMETHEUS_MULTIPROC_DIR=/tmp
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 60s
    command: >
      sh -c "python migrate_data.py && python -m uvicorn main:app --host 0.0.0.0 --port 8000 --workers 2"

  frontend:
    build:
      context: ./Front
      dockerfile: Dockerfile
    image: finn-loan-analysis-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - VITE_API_BASE_URL=http://backend:8000
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      # Mount the entire prometheus folder; inside container /etc/prometheus/prometheus.yml will exist
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    depends_on:
      - backend

  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - "9093:9093"
    volumes:
      # Mount the entire alertmanager folder; inside container /etc/alertmanager/config.yml will exist
      - ./monitoring/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    depends_on:
      - prometheus

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    restart: unless-stopped
    depends_on:
      - prometheus

  jenkins:
    build:
      context: ./jenkins
      dockerfile: Dockerfile
    ports:
      - "9190:8080"
      - "9191:50000"
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - ./jenkins/scripts:/var/jenkins_scripts
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    restart: unless-stopped
    user: root
    privileged: true

volumes:
  ollama_data:
  prometheus_data:
  grafana_data:
  jenkins_data:
